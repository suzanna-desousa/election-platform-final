/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/fys31EXTsov
 */
"use client";
 import { Label } from "@/components/ui/label"
 import { Input } from "@/components/ui/input"
 import { Button } from "@/components/ui/button"
 import { Separator } from "@/components/ui/separator"
 import Link from "next/link"
 import { JSX, SVGProps, useState } from "react"
 import { Header } from "@/components/header"
import { useRouter } from "next/navigation"
import {useCreateUserWithEmailAndPassword} from 'react-firebase-hooks/auth'
import {auth} from '@/app/firebase/config'
import { collection, addDoc } from "firebase/firestore"; 
import {db} from '@/app/firebase/config'

 
 export function SignUp() {

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [createUserWithEmailAndPassword] = useCreateUserWithEmailAndPassword(auth);

    const router = useRouter();

    const validateEmail = (email: string) => {
      // Use a regular expression for basic email validation
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    };

    const validatePassword = (password: string) => {
      // Password must be at least 8 characters long
      if (password.length < 8) {
        alert("Password must be at least 8 characters long.");
        return false;
      }
    
      // Password must contain at least 1 capital letter
      if (!/[A-Z]/.test(password)) {
        alert("Password must contain at least 1 capital letter.");
        return false;
      }
    
      // Password must contain at least 1 number
      if (!/\d/.test(password)) {
        alert("Password must contain at least 1 number.");
        return false;
      }
    
      // All criteria are met
      return true;
    };
    

    const submitRegistration = async () => {

        if (!validateEmail(email)) {
          alert("Invalid email format. Please enter a valid email address.");
          return;
        }
    
        if (!validatePassword(password)) {``
          return;
        }
        const domain = email.split("@")[1];

        try {
          var xmlHttp = new XMLHttpRequest();
          xmlHttp.open("GET", "https://api.mailcheck.ai/domain/" + domain, false);
          xmlHttp.send();

          const response = xmlHttp.responseText;

          const mx = response.split(",")[2];
          const valid = "" + mx.split(":")[1];
          const searchString = "true";

          if (valid.includes(searchString)) {
            const res = await createUserWithEmailAndPassword(email, password)
            setEmail('')
            setPassword('')
            console.log({res})


            const docRef = await addDoc(collection(db, "users"), {
              email: email,
              voted: false
            });


            alert("Successfully signed up.")
            router.push('/log-in');
          } else {
            alert("Invalid email. Try again.");
          }
        } catch (error) {
          console.error("Error checking email validity:", error);
        }

  };
  
   return (
     <div>
        <Header />
        <div className="mx-auto max-w-[350px] space-y-6">
            <div className="space-y-2 text-center">
                <h1 className="text-3xl font-bold">Register to Vote</h1>
                <p className="text-gray-500 dark:text-gray-400">Enter your account details to login.</p>
            </div>
            <div className="space-y-4">
                <div className="space-y-2">
                    <Label htmlFor="email">Email</Label>
                    <Input id="email" placeholder="m@example.com" required type="email" value={email} onChange={(e) => setEmail(e.target.value)}/>
                </div>
                <div className="space-y-2 relative">
                    <div className="space-y-1">
                        <Label htmlFor="password">Password</Label>
                        <div className="relative">
                            <Input id="password" required type="password" value={password} onChange={(e) => setPassword(e.target.value)} />
                        </div>
                    </div>
                </div>
                <Button className="w-full" type="button" onClick={submitRegistration}>
                Register
                </Button>
            </div>
            <Separator className="mb-0" />
            <div className="space-y-2 text-center">
                <p className="text-sm">
                Already registered? 
                <Link className="underline" href="/log-in">
                    Login
                </Link>
                </p>
            </div>
        </div>
     </div>
     
   )
 }
 
 export default SignUp;